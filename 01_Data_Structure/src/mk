#!/bin/bash

COMPILE_FLAG="-g"
OUTPUT_FILE="standard.log"
cat /dev/null > ${OUTPUT_FILE}

CPP_SRC_FILES=(
  "jh_stack.cc"
)

:<<"END"
C_SRC_FILES=(
  "jh_queue.c"
  "jh_deque.c"
  "jh_singly_linked_list.c"
  "jh_doubly_linked_list.c"
  "jh_search.c"
  "jh_heap.c"
  "jh_binary_search_tree.c"
  "jh_priority_queue.c"
  "jh_hashmap.c"
  "jh_hashmap_linked.c"

  )
END

C_SRC_FILES=(
  "jh_graph_array.c"
  "jh_graph_list.c"
)

function c_compile_and_exec () {
  SRC_NAME="${1}"
  EXEC_NAME="${SRC_NAME%\.c}"

  echo "################################"
  echo "Compile Target: ${SRC_NAME}"
  echo "Binary: ${EXEC_NAME}"
  echo "################################"

  echo "#### Compile Log: ${SRC_NAME}" >> ${OUTPUT_FILE}
  gcc ${SRC_NAME} ${COMPILE_FLAG} -o ${EXEC_NAME} >> ${OUTPUT_FILE} 2>&1 

  if [ $? -eq 0 ]; then
    ./${EXEC_NAME}
  else
    echo
    echo "Compile Failed..."
    echo "Check out your code"
  fi

  echo "" >> ${OUTPUT_FILE}
  echo ""
}

function cpp_compile_and_exec () {
  SRC_NAME="${1}"
  EXEC_NAME="${SRC_NAME%\.cc}"

  echo "################################"
  echo "Compile Target: ${SRC_NAME}"
  echo "Binary: ${EXEC_NAME}"
  echo "################################"

  echo "#### Compile Log: ${SRC_NAME}" >> ${OUTPUT_FILE}
  g++  ${SRC_NAME} ${COMPILE_FLAG} -o ${EXEC_NAME} >> ${OUTPUT_FILE} 2>&1 

  if [ $? -eq 0 ]; then
    ./${EXEC_NAME}
  else
    echo
    echo "Compile Failed..."
    echo "Check out your code"
  fi

  echo "" >> ${OUTPUT_FILE}
  echo ""
}

for FILE in ${CPP_SRC_FILES[@]}; do
  cpp_compile_and_exec ${FILE}
done

for FILE in ${C_SRC_FILES[@]}; do
  c_compile_and_exec ${FILE}
done

